openapi: 3.0.0
tags:
  - name: page_content
    description: Return HTML/CSS/JS content
  - name: user_operation
    description: Handle user operations
info:
  title: ReR-API
  version: '1.0'
  description: 'Mashup Application with built-in notifications, also available as a chromium extension.'
  contact:
    name: Alexandru Bita
    email: bita.alexandru24@gmail.com
    url: contact-url-tba
  termsOfService: tos-url-tba
  license:
    name: license-tba
    url: license-url-tbaa
servers:
  - url: 'http://localhost:1234'
paths:
  /get_feed:
    get:
      summary: GET Feed
      tags:
        - user_operation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/resource'
                required:
                  - success
                  - resources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
      operationId: get-get_feed
      description: "Get the resources corresponding to the user's preferred websites and domains (the default ones if the user is not logged in)"
      parameters:
        - schema:
            type: string
          in: header
          name: Auth-Token
          required: true
  /set_preferences:
    parameters: []
    put:
      summary: PUT Preferences
      operationId: put-set_preferences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                required:
                  - success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  succes:
                    type: boolean
                    default: 'false'
                required:
                  - succes
      description: "Update user's preferred domains and websites"
      parameters:
        - schema:
            type: string
          in: header
          required: true
          name: Auth-Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                websites:
                  type: array
                  items:
                    type: string
                domains:
                  type: array
                  items:
                    type: string
              required:
                - websites
                - domains
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - user_operation
  /get_preferences:
    get:
      summary: GET Preferences
      tags:
        - user_operation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                  websites:
                    type: array
                    items:
                      type: string
                  domains:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - websites
                  - domains
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
      operationId: get-get_preferences
      description: "Get current's user preferred domains and websites (the default ones if the user is not loggedd in)"
      parameters:
        - schema:
            type: string
          in: header
          name: Auth-Token
          required: true
  /register:
    post:
      summary: POST Register
      operationId: post-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                required:
                  - success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    default: 'false'
                    type: boolean
                required:
                  - success
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
      description: Create and store a new account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 16
                  pattern: '^(?=.{3,16}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$'
                password:
                  type: string
                  minLength: 8
                  maxLength: 24
                  pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$'
              required:
                - username
                - password
      tags:
        - user_operation
  /login:
    post:
      summary: POST Login
      operationId: post-login
      responses:
        '200':
          description: OK
          headers:
            Auth-Token:
              schema:
                type: string
              required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                required:
                  - success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
      description: Return an Auth-Token for accessing more domains and websites
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 16
                  pattern: '^(?=.{3,16}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$'
                password:
                  type: string
                  minLength: 68
                  maxLength: 24
                  pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$'
              required:
                - username
                - password
      tags:
        - user_operation
  /delete_account:
    delete:
      summary: DELETE Account
      operationId: delete-delete_account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'true'
                required:
                  - success
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
              examples: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: 'false'
                required:
                  - success
      description: Delete account associated with request.Auth-Token
      parameters:
        - schema:
            type: string
          in: header
          name: Auth-Token
          description: ''
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  minLength: 8
                  maxLength: 24
                  pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$'
              required:
                - password
            examples: {}
        description: "Check if request.password matches the account's password"
      tags:
        - user_operation
  /:
    get:
      summary: GET Feed Page
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                description: content
      operationId: get-index
      description: Return the static file corresponding to feed.html
      tags:
        - page_content
    parameters: []
  /account:
    get:
      summary: GET Account Page
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                description: content
      operationId: get-account
      description: Return the static file corresponding to account.html
      tags:
        - page_content
  /preferences:
    get:
      summary: GET  Preferences Page
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                description: content
      operationId: get-preferences
      description: Return the static file corresponding to preferences.html
      tags:
        - page_content
components:
  schemas:
    user:
      title: user
      type: object
      description: provided via POST /register and stored into the database
      properties:
        _id:
          type: string
        username:
          type: string
        password:
          type: string
        preferredSites:
          type: array
          items:
            type: string
        preferredDomains:
          type: array
          items:
            type: string
      required:
        - _id
        - username
        - password
        - preferredSites
        - preferredDomains
      x-tags:
        - model
    resource:
      title: resource
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        domains:
          type: array
          items:
            type: string
        source:
          type: string
        date:
          type: string
        image:
          type: string
      required:
        - _id
        - title
        - description
        - domains
        - source
      x-tags:
        - model
      description: provided via public APIs and stored into the database
